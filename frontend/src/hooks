import { useState, useEffect, useRef } from 'react';

export const useWebSocket = (url: string) => {
  const [messages, setMessages] = useState<any[]>([]);
  const webSocket = useRef<WebSocket | null>(null);

  useEffect(() => {
    webSocket.current = new WebSocket(url);

    webSocket.current.onopen = () => {
      console.log('WebSocket connected');
    };

    webSocket.current.onmessage = (event) => {
      const message = JSON.parse(event.data);
      setMessages((prevMessages) => [...prevMessages, message]);
    };

    webSocket.current.onclose = () => {
      console.log('WebSocket disconnected');
    };

    webSocket.current.onerror = (error) => {
      console.error('WebSocket error:', error);
    };

    return () => {
      if (webSocket.current) {
        webSocket.current.close();
      }
    };
  }, [url]);

  const sendMessage = (message: any) => {
    if (webSocket.current && webSocket.current.readyState === WebSocket.OPEN) {
      webSocket.current.send(JSON.stringify(message));
    }
  };

  return { messages, sendMessage };
}; 